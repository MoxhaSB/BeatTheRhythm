@startuml
skin rose

package codigo{

class ListaInstrumentos{

-cantidadActual: int
-cantidadMaxima: int
-listaInstrumento: Instrumento[]

+ListaInstrumentos(cantidadMaxima: int)
+getCantidadActual(): int
+obtener(codigo: int): Instrumento
+buscar(codigo: int): boolean
+eliminar(codigo: int): boolean
+agregar(instrumento: Instrumento): void
+entregarInstrumento(int i): Instrumento

}

class Instrumento{

-codigo: int
-precio: int
-stock: int
-nombre: String

+Intrumento(codigo: int, precio: int, stock: int, nombre: String)
+getCodigo(): int
+getPrecio(): int
+getStock(): int
+getNombre(): String
+toString(): String
}

class Percusion extends Instrumento{

-tipoPercusion: String
-materialConstruccion: String
-altura: String

+Percusion(codigo: int, precio: int, Stock: int, nombre: String, tipoPercusion: String, materialConstruccion: String, altura: String)
+getTipoPercusion(): String
+getMaterialConstruccion(): String
+getAltura(): String
}

class Viento extends Instrumento{

-materialConstruccion: String

+Viento(codigo: int, precio: int, Stock: int, nombre: String, materialConstruccion: String)
+getMaterialConstruccion(): String
}

class Cuerda extends Instrumento{

-tipoCuerda: String
-numCuerdas: int
-materialConstruccion: String
-tipo: String

+Cuerda(codigo: int, precio: int, Stock: int, nombre: String, tipoCuerda: String, numCuerdas: int, materialConstruccion: String, tipo: String)
+getTipoCuerda(): String
+getNumCuerdas(): int
+getMaterialConstruccion(): String
+getTipo(): String
}

ListaInstrumentos o--> Instrumento: almacena
Instrumento <-- Percusion
Instrumento <-- Viento
Instrumento <-- Cuerda

}

SistemaImpl --> ListaInstrumentos

package Sistema{

Interface Sistema{

+menu() throws IOException : void
+venderInstrumento() : void
+consultarInventario(): void
+agregarInstrumento() throws IOException : boolean
+cierre() throws IOException : boolean
}

class SistemaImpl implements Sistema{

-listaInstrumentos: ListaInstrumentos

+SistemaImpl()
+desplegarInstrumentos() : void
+boleta(precio: int, instrumento: Instrumento): void

}



@enduml